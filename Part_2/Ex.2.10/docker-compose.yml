version: '3.8'

services:

    frontend:
      build: ./example-frontend
      container_name: frontend
      networks:
      - webapp-network
    backend:
      build: ./example-backend
      container_name: backend
      networks:
      - webapp-network
      environment:
        - REDIS_HOST=redis
        - POSTGRES_HOST=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DATABASE=postgres
      depends_on:
        - redis
    redis:
      image: redis:latest
      container_name: redis
      networks:
      - webapp-network
    postgres:
      image: postgres:13.2-alpine
      restart: unless-stopped
      environment:
        - POSTGRES_PASSWORD=postgres
      container_name: postgres
      networks:
      - webapp-network
    nginx:
      image: nginx:alpine
      restart: unless-stopped
      container_name: nginx
      ports:
        - 80:80
      networks:
      - webapp-network
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf
      depends_on:
        - backend
        - frontend
networks:
  webapp-network: 
    name: webapp-network